import React, { useState } from 'react';
import { View, TextInput, TouchableOpacity, Text, Alert } from 'react-native';

const API_URL = 'http://192.168.1.12:5000';

const ResetPasswordScreen = ({ route, navigation }) => {
  const { email, otp } = route.params;
  const [newPassword, setNewPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');

  const handleResetPassword = async () => {
    if (!newPassword || !confirmPassword) return Alert.alert("L·ªói", "Vui l√≤ng nh·∫≠p ƒë·ªß 2 m·∫≠t kh·∫©u");
    if (newPassword !== confirmPassword) return Alert.alert("L·ªói", "M·∫≠t kh·∫©u kh√¥ng kh·ªõp");

    try {
      const res = await fetch(`${API_URL}/users/reset-password-forgot`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email, otp, newPassword }),
      });

      const text = await res.text();
      console.log("üîÅ Ph·∫£n h·ªìi:", text);

      try {
        const data = JSON.parse(text);
        if (res.ok) {
          Alert.alert("‚úÖ Th√†nh c√¥ng", "M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l·∫°i.");
          navigation.navigate('Login');
        } else {
          Alert.alert("‚ùå L·ªói", data.error || "Kh√¥ng th·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u");
        }
      } catch (e) {
        Alert.alert("‚ùå JSON Parse Error", "Ph·∫£n h·ªìi kh√¥ng h·ª£p l·ªá:\n" + text);
      }

    } catch (err) {
      Alert.alert("L·ªói k·∫øt n·ªëi", err.message);
    }
  };

  return (
    <View style={{ padding: 20 }}>
      <Text style={{ fontSize: 22, marginBottom: 20 }}>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u m·ªõi</Text>

      <TextInput
        placeholder="M·∫≠t kh·∫©u m·ªõi"
        value={newPassword}
        onChangeText={setNewPassword}
        secureTextEntry
        style={{ borderBottomWidth: 1, marginBottom: 20 }}
      />

      <TextInput
        placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u"
        value={confirmPassword}
        onChangeText={setConfirmPassword}
        secureTextEntry
        style={{ borderBottomWidth: 1, marginBottom: 20 }}
      />

      <TouchableOpacity onPress={handleResetPassword} style={{ backgroundColor: '#3B82F6', padding: 14, borderRadius: 10 }}>
        <Text style={{ color: '#fff', textAlign: 'center' }}>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</Text>
      </TouchableOpacity>
    </View>
  );
};

export default ResetPasswordScreen;
